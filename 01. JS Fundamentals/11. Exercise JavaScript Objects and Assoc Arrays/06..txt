
function result(input) {
    let systems = new Map();

    for (let line of input) {
        line = line.split(' | ');
        let systemName = line[0];
        let componentName = line[1];
        let subcomponentName = line[2];

        if (!systems.has(systemName)) {
            systems.set(systemName, new Map());
            systems.get(systemName).set(componentName,[subcomponentName]);
        }
        else if(!systems.get(systemName).has(componentName)){
            systems.get(systemName).set(componentName,[subcomponentName]);
        }
        else {
            systems.get(systemName).get(componentName).push(subcomponentName);
        }
    }

    let systemsSorted = Array.from(systems.keys()).sort((s1, s2) => sortSystems(s1, s2));
    function sortSystems(s1, s2) {
        if(systems.get(s1).size !== systems.get(s2).size) {
            return systems.get(s2).size - systems.get(s1).size; //sort outer key by amount of inner keys/components descending
        } else {
            return s1.toLowerCase().localeCompare(s2.toLowerCase()); //then order outer key alphabetically
        }
    }

    function sortComponents(system, c1, c2) {
        return systems.get(system).get(c2).length - systems.get(system).get(c1).length; // sort inner key by his value's count descending
    }

    //print outer key > inner key > inner value
    for(let system of systemsSorted) {
        console.log(system);
        let componentsSorted = Array.from(systems.get(system).keys()).sort((c1, c2) => sortComponents(system, c1, c2));

        for(let component of componentsSorted) {
            console.log(`|||${component}`);
            systems.get(system).get(component).forEach(sc => console.log(`||||||${sc}`))
        }
    }


}